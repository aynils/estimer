#!/bin/sh

NC='\033[0m'
RED='\033[1;31m'
GREEN='\033[1;32m'
ORANGE='\033[1;33m'
BLUE='\033[1;34m'

# check if code is black formated
echo -n -e "${ORANGE}CHECKING${NC}: Black format..."
black --check . > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo -e "             [ ${RED}FAILED!${NC} ]";
    exit 1
else
    echo -e "                  [ ${GREEN}OK${NC} ]";
fi

# check if code is flake8 formated
echo -n -e "${ORANGE}CHECKING${NC}: Flake8 format..."
flake8 src > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo -e "             [ ${RED}FAILED!${NC} ]";
    exit 1
else
    echo -e "                  [ ${GREEN}OK${NC} ]";
fi

# run tests
echo -n -e "${ORANGE}CHECKING${NC}: Running tests..."
. venv/bin/activate && src/manage.py test > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo -e "            [ ${RED}FAILED!${NC} ]";
    exit 1;
else
    echo -e "                 [ ${GREEN}OK${NC} ]";
fi

# check if todos left (warning only)
echo -n -e "${ORANGE}CHECKING${NC}: Pending TODOs..."
TODOS_FOUND=$(grep -R --exclude-dir={venv,.git,docs,__pycache__,static,pandas} "TODO:" .)
TODOS_FOUND_N=$(echo "$TODOS_FOUND" | sed "/^$/d" | wc -l)
if [ $TODOS_FOUND_N -ne 0 ]; then
    echo -e "           [ ${ORANGE}WARNING!${NC} ] ($TODOS_FOUND_N)";
else
    echo -e "                 [ ${GREEN}OK${NC} ]";
fi

echo
echo -e "     ---> ${GREEN}DONE${NC}, pushing to remote! <---"
